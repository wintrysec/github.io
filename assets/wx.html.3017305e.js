import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c as r,a,b as e,d as i,e as s,r as o}from"./app.02b19a3e.js";const c="/assets/clip_image002.f28c44f7.gif",d="/assets/clip_image004.50a3d4a8.gif",l="/assets/clip_image006.dce555a6.jpg",h="/assets/clip_image008.3156f7f0.jpg",g="/assets/clip_image010.8213e4d9.jpg",u="/assets/clip_image012.08c73647.jpg",m="/assets/clip_image014.183cc798.jpg",_={},x=s('<h2 id="pc端小程序抓包渗透" tabindex="-1"><a class="header-anchor" href="#pc端小程序抓包渗透" aria-hidden="true">#</a> PC端小程序抓包渗透</h2><p>通过 Proxifier 将微信小程序客户端的流量发送到 burpsuite 代理。</p><p>1）BurpSuite 开启代理，监听端口为 127.0.0.1:8080</p><p>2）Proxifier 设置的代理服务器和代理规则</p><p>代理服务器：</p><p><img src="'+c+'" alt="img" loading="lazy"></p><p>代理规则：</p><p><img src="'+d+'" alt="img" loading="lazy"></p><h2 id="反编译获取源码" tabindex="-1"><a class="header-anchor" href="#反编译获取源码" aria-hidden="true">#</a> 反编译获取源码</h2><h3 id="windows-pc-获取小程序包" tabindex="-1"><a class="header-anchor" href="#windows-pc-获取小程序包" aria-hidden="true">#</a> <strong>Windows PC</strong> 获取小程序包</h3><p>首先在微信中搜索到小程序，并打开简单浏览</p><p>然后在自己微信文件保存路径下找到 applet 下找到该小程序包，可以通过时间或者小程序的 appid 快速定位到目标包</p><p><img src="'+l+'" alt="img" loading="lazy"></p><p>微信电脑端小程序包存在加密，需要使用工具进行解密；打开解密工具，在工具目录建立 wxpack 文件夹（解密后的小程序包会放在这个地方），运行工具解密需要操作的小程序包即可</p><p><img src="'+h+'" alt="img" loading="lazy"></p><h3 id="反编译微信小程序源码" tabindex="-1"><a class="header-anchor" href="#反编译微信小程序源码" aria-hidden="true">#</a> 反编译微信小程序源码</h3>',16),v={href:"https://github.com/xuedingmiaojun/wxappUnpacker",target:"_blank",rel:"noopener noreferrer"},k=s(`<p>1）进入到下载脚本目录安装依赖</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>npm install <span class="token operator">--</span>registry=http:<span class="token operator">/</span><span class="token operator">/</span>registry<span class="token punctuation">.</span>npm<span class="token punctuation">.</span>taobao<span class="token punctuation">.</span>org
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+g+`" alt="img" loading="lazy"></p><p>复制小程序pkg的路径执行</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>bingo<span class="token punctuation">.</span>bat C:\\Users\\wintrysec\\Desktop\\wxpack\\wxe9bdd9355cd82a23<span class="token punctuation">.</span>wxapkg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+u+'" alt="img" loading="lazy"></p><p>至此就成功获取到了小程序的源码</p><h3 id="调试小程序" tabindex="-1"><a class="header-anchor" href="#调试小程序" aria-hidden="true">#</a> 调试小程序</h3>',8),b={href:"https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html",target:"_blank",rel:"noopener noreferrer"},f=s('<p><img src="'+m+`" alt="img" loading="lazy"></p><h2 id="appid和secret利用" tabindex="-1"><a class="header-anchor" href="#appid和secret利用" aria-hidden="true">#</a> Appid和Secret利用</h2><p>获取到的appid和secret可以到微信的官方接口去自由生成微信小程序的<code>AccessToken</code></p><div class="language-HTTP line-numbers-mode" data-ext="HTTP"><pre class="language-HTTP"><code>https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid={{APPID}}&amp;secret={{APPSECRET}}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>拿到 AccessToken，相当于可以控制整个小程序了，并且 AccessToken 微信每天只能生成20次</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;access_token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;70_qGt5fEExKvlXX1tC_e_r_aRYPj0j3_oxZlazJ7-NcC44omBfHwfjXKxTN7WJWl9dTGGxCL2vPd9M0u1DSQS5pjjhEUtz-PhJ2kX0GSFov2KOAnjf5FUhNJLk1UUWGWcAHALVL&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;expires_in&quot;</span><span class="token operator">:</span> <span class="token number">7200</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>access_token 后续利用，可以用发送图文文章/消息用于钓鱼。</p>`,7),w={href:"https://developers.weixin.qq.com/apiExplorer",target:"_blank",rel:"noopener noreferrer"},j=s('<h2 id="破解-sign-签名" tabindex="-1"><a class="header-anchor" href="#破解-sign-签名" aria-hidden="true">#</a> 破解 sign 签名</h2><h3 id="sign定义" tabindex="-1"><a class="header-anchor" href="#sign定义" aria-hidden="true">#</a> sign定义</h3><p>sign一般用于参数签名，用来验证数据的完整性和真实性。</p><p>为校验客户端数据传输合法性，防止用户篡改参数、伪装、重放以及数据泄露等常用sign签名校验。</p><p>sign标识生成方法一般是是将秘钥、时间戳、特殊字符、随机数等参数经过特定排序后使用某种加密算法进行加密，作为接口中的一个参数sign来传递，也可以将sign放到请求头中。</p><p>一般加密方法有：MD5、AES、SHA等。</p><h3 id="绕过签名思路" tabindex="-1"><a class="header-anchor" href="#绕过签名思路" aria-hidden="true">#</a> 绕过签名思路</h3><p>1、观察sign的格式，看是否弱加密，比如是base64解码；</p><p>2、将sign字段删除或直接置空sign的值，尝试绕过校验；</p><p>3、反编译出源代码，查找加密算法，找到sign的生成方式。</p>',10);function q(P,y){const n=o("ExternalLinkIcon");return t(),r("div",null,[x,a("p",null,[e("使用wxappUnpacker工具解包小程序源码："),a("a",v,[e("https://github.com/xuedingmiaojun/wxappUnpacker"),i(n)])]),k,a("p",null,[e("打开"),a("a",b,[e("微信开发者工具"),i(n)]),e("，选择导入项目")]),f,a("p",null,[e("用微信调试工具发起真实请求，"),a("a",w,[e("https://developers.weixin.qq.com/apiExplorer"),i(n)])]),j])}const E=p(_,[["render",q],["__file","wx.html.vue"]]);export{E as default};
